#!/bin/bash
#1. curl the url & save it to a file（以接口命名）.
#2. anaylse to get debugMsg
#3. 执行多次的结果保存到一个文件
#4. count avg min max && print
#5. 
#usage

if [ "$#" != 2 ]; then
	echo "usage: nohup ILog.sh 执行次数 执行间隔时间秒 &"
	echo "具体的接口URL需要在脚本中配" 
	exit 2
fi

CYCLE=$1
SLEEPTIME=$2

	NAME="api.com.route.common.product.getRouteDetails_new"
	#name file
	NAMETIME=`date +%F`
	SFILE="logs/src_$NAME"
	LFILE="logs/log_$NAME"
	TFILE="logs/tmp_$NAME"
	RFILE="logs/end_${NAME}_${NAMETIME}"
	header=`grep signal /rd/pystudy/conf |awk -F : '{print $2}'`
	for i in `seq ${CYCLE}`
	do
	#获取到接口的完整数据日志
		now=`date +%Y-%m-%d_%H:%M:%S`
		curl -H $header 'http://api3g2.lvmama.com/api/router/rest.do?method=api.com.route.common.product.getRouteDetails&clientTimestamp=1467862828973&productDestId=9&formate=json&lvversionCode=60&lvversion=7.6.2&lvsessionid=236a705b-0f92-4280-84d9-e1358aade35c&globalLongitude=121.398379&secondChannel=XIAOMI&firstChannel=ANDROID&globalLatitude=31.24187&productId=810716&version=1.0.0&osVersion=6.0&udid=869161026900324&lvtukey=19fc1ca78c7fce08caaf1870d162251c&IS_DEBUG=1' -H 'Pragma: no-cache' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: zh-CN,zh;q=0.8' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Cache-Control: no-cache' -H 'Cookie: CoreID6=18247111830914682331978&ci=90409730; uid=wKgKb1eDdg0a/FAsNPfrAg==; _lvTrack_u_ud=7DCF71CD-C288-4090-8C59-108CB1B9B674; cookieNumber=499; tele=4006-040-499; cm_mmc=CPS-_-lingke-_-a-_-a; utm_source=LINKTECH; utm_medium=CPS; losc=045050; source=LINKTECH; serviceId="http://www.lvmama.com"; ltInfo=A100200613; cpsId=f23bbc602a5ab47c8147a3ae1845002e; orderFromChannel=LINKTECH; oUC=015766045050; oUT=06130614; fingerprint=00a3550f50276422124e96b63422c7a9; oIC=080561080562; oIT=06140614; __xsptplus443=443.2.1468460486.1468460590.3%231%7Cbaidu10%7Csem%7Ccpc%7C%25E9%25A9%25B4%25E5%25A6%2588%25E5%25A6%2588%7C%23%2330DYqEbUDrOpDvmZ1ITYGjC-xMs4EPIy%23; ticketCityName=%u4E0A%u6D77; cityStation=SH; cityTicketId=1; cityTicketPinyin=shanghai; _lvTrack_u_sd=4B9209C3-E419-4186-A86E-1A6B7734D5C3; _lvTrack_firstVisitTime=1468817513624; _lvTrack_preVisitTime=1468817513625; _pzfxuvpc=1468412945901%7C1414897582695916025%7C11%7C1468817514134%7C3%7C7503403873723438829%7C1373720779442891994; stationCode=SH; cityId=; stationPinyin=shanghai; stationId=1; lvsessionid=b11075f4-985b-4232-b7f8-37df3f16fdae_14296414; cityName=%u4E0A%u6D77; Hm_lvt_cb09ebb4692b521604e77f4bf0a61013=1468892694; Hm_lpvt_cb09ebb4692b521604e77f4bf0a61013=1468892834; __utma=30114658.1519742379.1468233198.1468837066.1468892245.14; __utmc=30114658; __utmz=30114658.1468460510.6.3.utmcsr=LINKTECH|utmccn=(not%20set)|utmcmd=CPS; 90409730_clogin=l=1468892244&v=1&e=1468894633745' -H 'Connection: keep-alive' --compressed > $SFILE
		echo $now >> $LFILE
		jq .debugMsg $SFILE |awk -F '\"' '{ print $2 }' | sed 's/ms\\n/ms\n\\n/g' >> $LFILE
		#sed 's/,/\n/g' $SFILE |grep debugMsg| awk -F '\"' '{ print $4 }' | sed 's/ms\\n/ms\n\\n/g' >> $LFILE
		sleep ${SLEEPTIME}
	done
	#根据输出次数和行数的关系，计算最终结果行数（计算次数）
	lines=`wc -l $LFILE | awk '{print $1}' `
	Flines=`expr $lines / $CYCLE`
	#根据行数，计算avg min max的函数
	cp $LFILE $RFILE
	echo "" >> $RFILE
	for o in `seq 2 $Flines`
		do
			lineinfo=`sed -n ${o}p $LFILE | grep -o '\[.*\]'`
			#passinfo=`sed -n ${o}p $LFILE | awk -F ":" '{print $2}'`
		#获取每次测试每个步骤的costtime
			tmpinfo=`echo $lineinfo | sed "s/\[//g;s/\]//g" `
			cat $LFILE | grep "${tmpinfo}" | awk -F "costTime:" '{print $2}'|awk '{ print int($0) }'  > $TFILE
		#计算
			passavgTime=`cat $TFILE | awk '{sum+=$1}END{print sum/NR}'`
			passMaxTime=`cat $TFILE | sort -n| tail -n 1`
			passminTime=`cat $TFILE | sort -n| head -n 1`
			passrangeTime="TimeRange: ${passminTime} ~ ${passMaxTime}"
			echo "${lineinfo} avgCostTime: ${passavgTime}ms ${passrangeTime}ms " >> $RFILE
	done
	#rm -f $SFILE $LFILE $TFILE
	cat $RFILE | mutt -s "${NAME}_LOG" zhangqiang@lvmama.com

#发邮件方法
#echo "" | mutt -s "" -t someone

exit 0
